type EventCategory = 'global' | 'key' | 'mouse' | 'change' | 'wheel'


const Keys = [
	'Backspace',
	'Tab',
	'Clear',
	'Enter',
	'Control',
	'Alt',
	'CapsLock',
	'Escape',
	// ' ',, get removed
	'PageUp',
	'PageDown',
	'End',
	'Home',
	'ArrowLeft',
	'ArrowUp',
	'ArrowRight',
	'ArrowDown',
	'Insert',
	'Delete',
	'0',
	'1',
	'2',
	'3',
	'4',
	'5',
	'6',
	'7',
	'8',
	'9',
	'A',
	'B',
	'C',
	'D',
	'E',
	'F',
	'G',
	'H',
	'I',
	'J',
	'K',
	'L',
	'M',
	'N',
	'O',
	'P',
	'Q',
	'R',
	'S',
	'T',
	'U',
	'V',
	'W',
	'X',
	'Y',
	'Z',
	'a',
	'b',
	'c',
	'd',
	'e',
	'f',
	'g',
	'h',
	'i',
	'j',
	'k',
	'l',
	'm',
	'n',
	'o',
	'p',
	'q',
	'r',
	's',
	't',
	'u',
	'v',
	'w',
	'x',
	'y',
	'z',
	'Meta',
	'*',
	'+',
	'-',
	'.',
	'/',
	'F1',
	'F2',
	'F3',
	'F4',
	'F5',
	'F6',
	'F7',
	'F8',
	'F9',
	'F10',
	'F11',
	'F12',
	';',
	'=',
	',',
	'Â·',
	'[',
	'\\',
	']',
	'\'',
	')',
	'!',
	'@',
	'#',
	'$',
	'%',
	'^',
	'&',
	'(',
	'E',
	'I',
	'O',
	'P',
	'Q',
	'R',
	'T',
	'U',
	'W',
	'Y',
	':',
	'<',
	'_',
	'>',
	'?',
	'~',
	'{',
	'|',
	'}',
	'"'
]

const Codes = [
	'Backspace',
	'Tab',
	'NumLock',
	'Enter',
	'ControlLeft',
	'AltLeft',
	'CapsLock',
	'Escape',
	'Space',
	'PageUp',
	'PageDown',
	'End',
	'Home',
	'ArrowLeft',
	'ArrowUp',
	'ArrowRight',
	'ArrowDown',
	'Insert',
	'Delete',
	'Digit0',
	'Digit1',
	'Digit2',
	'Digit3',
	'Digit4',
	'Digit5',
	'Digit6',
	'Digit7',
	'Digit8',
	'Digit9',
	'KeyA',
	'KeyB',
	'KeyC',
	'KeyD',
	'KeyE',
	'KeyF',
	'KeyG',
	'KeyH',
	'KeyI',
	'KeyJ',
	'KeyK',
	'KeyL',
	'KeyM',
	'KeyN',
	'KeyO',
	'KeyP',
	'KeyQ',
	'KeyR',
	'KeyS',
	'KeyT',
	'KeyU',
	'KeyV',
	'KeyW',
	'KeyX',
	'KeyY',
	'KeyZ',
	'MetaLeft',
	'MetaRight',
	'NumpadMultiply',
	'NumpadAdd',
	'NumpadSubtract',
	'NumpadDecimal',
	'NumpadDivide',
	'F1',
	'F2',
	'F3',
	'F4',
	'F5',
	'F6',
	'F7',
	'F8',
	'F9',
	'F10',
	'F11',
	'F12',
	'Semicolon',
	'Equal',
	'Comma',
	'Minus',
	'Period',
	'Slash',
	'Backquote',
	'BracketLeft',
	'Backslash',
	'BracketRight',
	'Quote'
]

const ControlKeyCode = ['Ctrl+', 'Alt+', 'Shift+', 'Ctrl+Alt+', 'Ctrl+Shift+', 'Alt+Shift+', 'Ctrl+Alt+Shift+']


export const LuposDomEventModifiers: Record<EventCategory, CompleteDataItem[]> = {
	global: [
		{name: 'capture', description: 'Trigger event only in capture phases, not bubble phases.'},
		{name: 'self', description: 'Trigger event only when event target is current element and not child element.'},
		{name: 'once', description: 'Trigger event for only once.'},
		{name: 'prevent', description: 'Prevents default action for event, e.g., prevent a contextmenu event will cause no browser menu popup.'},
		{name: 'stop', description: 'Stops event propagation and event will not broadcast to parents or children.'},
		{name: 'passive', description: 'Browser will not wait listener to execute completed before painting. so, e.g., you will get better performance when scrolling.'},
	],
	key: [
		{name: 'ctrl', description: 'Trigger key event only when ctrl key pressed.'},
		{name: 'shift', description: 'Trigger key event only when shift key pressed.'},
		{name: 'alt', description: 'Trigger key event only when alt key pressed.'},
		...NormalKeyCodes.map(code => ({name: code, description: 'Key code: ' + code})),
		...PartialKeyKeys.map(code => ({name: code, description: 'Key value: ' + code})),
	],
	mouse: [
		{name: 'left', description: 'Trigger mouse event only when interact with left button.'},
		{name: 'middle', description: 'Trigger mouse event only when interact with middle button.'},
		{name: 'right', description: 'Trigger mouse event only when interact with right button.'},
		{name: 'main', description: 'Trigger mouse event only when interact with main button.'},
		{name: 'auxiliary', description: 'Trigger mouse event only when interact with auxiliary button.'},
		{name: 'secondary', description: 'Trigger mouse event only when interact with secondary button.'},
	],
	change: [
		{name: 'check', description: 'Trigger change event only when input becomes checked.'},
		{name: 'uncheck', description: 'Trigger change event only when input becomes unchecked.'},
	],
	wheel: [
		{name: 'up', description: 'Trigger wheel event only when wheel up.'},
		{name: 'down', description: 'Trigger wheel event only when wheel down.'},
	],
}


export const LuposEventCategories: Record<string, EventCategory> = {
	keydown: 'key',
	keyup: 'key',
	keypress: 'key',
	mousedown: 'mouse',
	mousemove: 'mouse',
	mouseup: 'mouse',
	click: 'mouse',
	dblclick: 'mouse',
	change: 'change',
	wheel: 'wheel',
}
